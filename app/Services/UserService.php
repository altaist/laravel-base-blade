<?php

namespace App\Services;

use App\Models\User;
use App\Models\Person;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;

class UserService
{
    /**
     * Создать пользователя и связанную персону.
     * Если данные о персоне не переданы, создается запись с пустыми значениями.
     *
     * @param array $userData Данные пользователя (name, email, password и т.д.).
     * @param array|null $personData Данные персоны (опционально).
     * @return User
     */
    public function createUserWithPerson(array $userData, ?array $personData = null): User
    {
        return DB::transaction(function () use ($userData, $personData) {
            // Создаем пользователя
            $user = User::create($userData);

            // Создаем персону (если данные не переданы, используем пустой массив)
            $personData = $personData ?? [];
            $user->person()->create($personData);

            return $user;
        });
    }

    /**
     * Создать пользователя с автоматически сгенерированными данными.
     * Полезно для авторегистрации по ссылкам, когда не все данные доступны.
     *
     * @param array $userData Доступные данные пользователя (может быть пустым).
     * @param array|null $personData Данные персоны (опционально).
     * @return User
     */
    public function createUserWithAutoGeneratedData(array $userData = [], ?array $personData = null): User
    {
        return DB::transaction(function () use ($userData, $personData) {
            try {
                // Создаем пользователя с автогенерированными данными для авторегистрации
                $user = User::factory()->autoGenerated()->create();

                // Обновляем только переданные данные (telegram_id, telegram_username)
                if (!empty($userData)) {
                    $user->update($userData);
                }

                // Создаем связанную персону
                $personData = $personData ?? [];
                $user->person()->create($personData);

                Log::info('Пользователь создан с автогенерированными данными', [
                    'user_id' => $user->id,
                    'email' => $user->email,
                    'name' => $user->name,
                    'has_password' => !empty($user->password)
                ]);

                return $user;
            } catch (\Exception $e) {
                Log::error('Ошибка при создании пользователя с автогенерированными данными', [
                    'user_data' => $userData,
                    'person_data' => $personData,
                    'error' => $e->getMessage(),
                    'trace' => $e->getTraceAsString()
                ]);
                throw $e;
            }
        });
    }
}
