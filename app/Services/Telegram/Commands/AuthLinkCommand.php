<?php

namespace App\Services\Telegram\Commands;

use App\DTOs\TelegramMessageDto;
use App\Models\User;
use App\Services\AuthLinkService;
use App\Services\Telegram\Base\BaseTelegramCommand;
use App\Services\Telegram\TelegramService;
use Illuminate\Support\Facades\Log;

class AuthLinkCommand extends BaseTelegramCommand
{


    public function getName(): string
    {
        return 'auth';
    }

    public function getDescription(): string
    {
        return '–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏';
    }

    public function process(TelegramMessageDto $message): void
    {
        $authLinkService = app(AuthLinkService::class);
        
        try {
            // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id
            $user = User::where('telegram_id', $message->userId)->first();

            if ($user) {
                // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                $authLink = $authLinkService->generateAuthLink($user, [
                    'expires_in_minutes' => 15,
                    'ip_address' => null,
                    'user_agent' => 'Telegram Bot',
                    'author_id' => $user->id,
                ]);

            } else {
                // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                $authLink = $authLinkService->generateRegistrationLink([
                    'telegram_id' => $message->userId,
                    'telegram_username' => null, // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å
                ], [
                    'expires_in_minutes' => 60, // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∂–∏–≤—É—Ç –¥–æ–ª—å—à–µ
                    'ip_address' => null,
                    'user_agent' => 'Telegram Bot',
                    'author_id' => null,
                ]);
            }

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
            $loginUrl = route('auth-link.authenticate', $authLink->token);

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            if ($user) {
                $text = "üîê –°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∞!\n\n" .
                    "–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 15 –º–∏–Ω—É—Ç.\n" .
                    "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É:\n\n" .
                    "{$loginUrl}\n\n" .
                    "‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º!";
            } else {
                $text = "üîê –°—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∞!\n\n" .
                    "–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 1 —á–∞—Å.\n" .
                    "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:\n\n" .
                    "{$loginUrl}\n\n" .
                    "‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º!";
            }

            $this->reply($message, $text, TelegramService::FORMAT_HTML);

        } catch (\Exception $e) {
            Log::channel('telegram')->error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ Telegram", [
                'error' => $e->getMessage(),
                'telegram_id' => $message->userId,
            ]);

            $this->reply($message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", TelegramService::FORMAT_HTML);
        }
    }
}
