<?php

namespace App\Console\Commands;

use App\Models\User;
use App\Models\UserTelegramBot;
use Illuminate\Console\Command;

class MigrateTelegramData extends Command
{
    protected $signature = 'telegram:migrate-data 
        {--dry-run : –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è}
        {--force : –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏}';
    
    protected $description = '–ü–µ—Ä–µ–Ω–æ—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö telegram_id –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_telegram_bots';

    public function handle()
    {
        $this->info('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö Telegram...');
        
        $users = User::whereNotNull('telegram_id')->get();
        $this->info("–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å telegram_id: {$users->count()}");
        
        if ($users->isEmpty()) {
            $this->warn('–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏.');
            return Command::SUCCESS;
        }
        
        $migrated = 0;
        $skipped = 0;
        $errors = 0;
        
        foreach ($users as $user) {
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å
                $exists = UserTelegramBot::where('user_id', $user->id)
                    ->where('bot_name', 'main')
                    ->exists();
                
                if ($exists && !$this->option('force')) {
                    $this->line("‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {$user->id} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)");
                    $skipped++;
                    continue;
                }
                
                if ($this->option('dry-run')) {
                    $this->line("üìã –ë—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω: User ID {$user->id}, Telegram ID {$user->telegram_id}");
                    $migrated++;
                    continue;
                }
                
                // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                UserTelegramBot::updateOrCreate(
                    [
                        'user_id' => $user->id,
                        'bot_name' => 'main',
                    ],
                    [
                        'telegram_id' => $user->telegram_id,
                        'bot_data' => [
                            'migrated_from_old_system' => true,
                            'migration_date' => now()->toISOString(),
                            'original_telegram_username' => $user->telegram_username,
                        ],
                    ]
                );
                
                $this->line("‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω: User ID {$user->id} ‚Üí Telegram ID {$user->telegram_id}");
                $migrated++;
                
            } catch (\Exception $e) {
                $this->error("‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {$user->id}: {$e->getMessage()}");
                $errors++;
            }
        }
        
        $this->newLine();
        $this->info("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏:");
        $this->table(
            ['–°—Ç–∞—Ç—É—Å', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'],
            [
                ['–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ', $migrated],
                ['–ü—Ä–æ–ø—É—â–µ–Ω–æ', $skipped],
                ['–û—à–∏–±–∫–∏', $errors],
            ]
        );
        
        if ($this->option('dry-run')) {
            $this->warn('üîç –†–µ–∂–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - –¥–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω—ã');
            $this->info('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ --dry-run');
        } else {
            $this->info('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            $totalBots = UserTelegramBot::count();
            $mainBots = UserTelegramBot::where('bot_name', 'main')->count();
            
            $this->info("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:");
            $this->info("- –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ user_telegram_bots: {$totalBots}");
            $this->info("- –ó–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞: {$mainBots}");
        }
        
        return Command::SUCCESS;
    }
}